虚拟机栈：
    Java虚拟机栈也是线程私有的内存空间，它和Java线程在同一时间创建，它保存方法局部变量，部分结果，并参与
方法的调用和返回。

堆：
    Java堆可以说是Java运行时内存中最为重要的部分，几乎所有的对象和数组都是堆中分配空间的。Java堆分为新生
代和老年带两个部分，新生带用于存放刚刚产生的对象和年轻的对象，如果对象一直没有被收回，生存的足够长，老年对象
就会被移入新生代。

方法区：
    方法区也叫永久区，他是JVM内存区中非常重要的一块内存区域，与对空间类似，它也是被JVM所有线程共享的。方法
区主要保存的信息是类的元数据。这些元数据包括:类的类型信息(类名、父类名、修饰符等等)、常量池、域信息、方法
信息(方法名、返回类型、方法参数、修改符等)。总之，方法区中保存的信息，大部分来自于class文件，也是java应用
程序运行必不可少的重要依据。

程序计数器：
    程序计数器是一块很小内存空间。由于Java是支持线程的语言，当线程数量超过CPU数量时，线程之间根据时间轮询
抢夺CPU资源。对于单核CPU而言，每一个时刻，只有一个线程在运行，而其他线程必须被切换出去。为此，每一个线程
都必须用一个独立的程序计数器，用于记录下一个条要运行的指令。各个线程之间的计数器互不影响，独立工作；是一块
线程私有内存空间。如果当前线程正在执行一个Java方法，则程序计数器记录正在执行的Java字节码地址。如果当前线程
正在执行一个Native方法，则程序计数器为空。

本地方法栈：
    本地方法栈和Java虚拟机栈的功能很相似，Java虚拟机用于管理Java函数调用，而本地方法栈用于管理本地方法调
用。本地方法并不是Java实现的，而是使用C实现的。在SUN的HotSpot，不区分本地方法栈和虚拟机栈。因此，和虚拟机
栈一样，它也会抛出StackOverflowError和OutOfMemoryError。

总结：
    JVM运行内存逻辑模型包括堆、虚拟机栈、方法区、程序计算器、本地方法栈。其中堆、方法区、虚拟机栈是我们要
重点理解的，学习JVM是帮助我们做JVM调优，而堆、栈、方法去是最常见的优化关注3块。